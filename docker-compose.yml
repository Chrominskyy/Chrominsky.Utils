version: '3.8'

services:
  # Redis service for caching
  redis:
    image: redis:7-alpine
    container_name: chrominsky-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3
    networks:
      - chrominsky-network

  # PostgreSQL database
  postgres:
    image: postgres:16-alpine
    container_name: chrominsky-postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
      POSTGRES_DB: chrominsky_db
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 3s
      retries: 3
    networks:
      - chrominsky-network

  # Azure SQL Server (SQL Server for Linux)
  # Note: Azure SQL is a cloud service. This is SQL Server compatible for local development
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: chrominsky-sqlserver
    ports:
      - "1433:1433"
    environment:
      ACCEPT_EULA: "Y"
      SA_PASSWORD: "YourStrong!Passw0rd"
      MSSQL_PID: "Developer"
    volumes:
      - sqlserver-data:/var/opt/mssql
    healthcheck:
      test: ["CMD-SHELL", "/opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P YourStrong!Passw0rd -Q 'SELECT 1' || exit 1"]
      interval: 10s
      timeout: 3s
      retries: 5
    networks:
      - chrominsky-network

  # Example .NET API application using Chrominsky.Utils
  # This is a placeholder - replace with your actual .NET application
  dotnet-api:
    build:
      context: ./docker/sample-api
      dockerfile: Dockerfile
    container_name: chrominsky-dotnet-api
    ports:
      - "5000:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Host=postgres;Database=chrominsky_db;Username=postgres;Password=postgres123
      - ConnectionStrings__SqlServer=Server=sqlserver;Database=chrominsky_db;User Id=sa;Password=YourStrong!Passw0rd;TrustServerCertificate=True
      - Redis__ConnectionString=redis:6379
      - SimpleEmailSettings__SmtpHost=smtp.gmail.com
      - SimpleEmailSettings__SmtpPort=587
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
      sqlserver:
        condition: service_healthy
    networks:
      - chrominsky-network
    # Uncomment this section to build from your own application
    # build:
    #   context: .
    #   dockerfile: Dockerfile

volumes:
  redis-data:
  postgres-data:
  sqlserver-data:

networks:
  chrominsky-network:
    driver: bridge
